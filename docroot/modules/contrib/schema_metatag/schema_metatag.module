<?php

/**
 * @file
 * Contains schema_metatag.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\schema_metatag\SchemaMetatagManager;

/**
 * Implements hook_help().
 */
function schema_metatag_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.schema_metatag':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module adds Schema.org structured data to web pages as JSON-LD. Configure structured data elements using the metatags module.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_page_attachments_alter().
 *
 * Load all meta tags for this page, then separate out the structured data.
 */
function schema_metatag_page_attachments_alter(array &$attachments) {

  if (empty($attachments['#attached']['html_head'])) {
    return;
  }

  // Remove structured data items from metatags array and move to separate
  // structured data array. This way they will not be rendered as metatags.
  $schema_metatag = [];
  foreach ($attachments['#attached']['html_head'] as $key => $item) {
    if (!empty($item[0]['#attributes']['schema_metatag'])) {
      $group = $item[0]['#attributes']['group'];
      // Nest items by the group they are in.
      $schema_metatag[$group][] = $item;
      unset($attachments['#attached']['html_head'][$key]);
    }
  }
  // Construct JSON LD from structured data array and add it to head.
  if (count($schema_metatag) > 0) {
    $route_entity = metatag_get_route_entity();
    $jsonld = SchemaMetatagManager::jsonld($schema_metatag, $route_entity);
    if (!empty($jsonld)) {
      $attachments['#attached']['html_head']['schema_metatag'] = [
        [
          '#type' => 'html_tag',
          '#tag' => 'script',
          '#value' => $jsonld,
          '#attributes' => ['type' => 'application/ld+json'],
        ],
        'schema_metatag',
      ];
    }
  }
}
