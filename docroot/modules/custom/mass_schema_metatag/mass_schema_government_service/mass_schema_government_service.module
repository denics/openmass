<?php

/**
 * @file
 * Contains schema_article.module.
 */

use Drupal\Core\Render\BubbleableMetadata;
use Drupal\Core\Url;

/**
 * Implements hook_metatag_groups_alter().
 *
 * Every module should implement this to add a flag to the object types they
 * create.
 */
function mass_schema_government_service_metatag_groups_alter(&$data) {
  $module_name = basename(__FILE__, '.module');
  foreach ($data as $key => $value) {
    if ($value['provider'] == $module_name) {
      $data[$key]['schema_metatag'] = TRUE;
    }
  }
}

/**
 * Implements hook_tokens().
 */
function mass_schema_government_service_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata) {
  $replacements = [];

  if ($type == 'entity' && !empty($data['entity'])) {
    $entity = $data['entity'];

    foreach ($tokens as $name => $original) {
      if ($entity->hasField($name) && $entity->get($name)->getFieldDefinition()->getType() == 'link') {
        $data = [];
        $value = $entity->get($name)->getValue();
        foreach ($value as $link) {
          $name = !empty($link['title']) ? $link['title'] : '';
          $url = '';
          if (!empty($link['uri'])) {
            $url = Url::fromUri($link['uri'], ['absolute' => TRUE])->toString();
          }
          $data[] = [
            'name' => $name,
            'url' => $url,
          ];
        }

        $replacements[$original] = json_encode($data);
      }
    }
  }

  return $replacements;
}