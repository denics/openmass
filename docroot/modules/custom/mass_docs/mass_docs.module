<?php

/**
 * @file
 * Contains mass_docs.module.
 *
 * Copyright 2017 Palantir.net, Inc.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\StringTranslation\TranslatableMarkup;

/**
 * Implements hook_help().
 */
function mass_docs_help($route_name, RouteMatchInterface $route_match) {
  $output = '';
  switch ($route_name) {
    case 'help.page.mass_docs':
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module provides integration functionality with Mass Docs.') . '</p>';
      break;

    default:
  }
  return $output;
}

/**
 * Implements MODULE_preprocess_HOOK().
 *
 * @param array $variables
 *   Hook variables.
 */
function mass_docs_preprocess_input__submit(array &$variables) {
  /** @var \Drupal\Core\StringTranslation\TranslatableMarkup $attr_value */
  $attr_value = &$variables['attributes']['value'];

  if ($attr_value instanceof TranslatableMarkup) {
    // Change "Add new media" button to "Add new file".
    if ($attr_value->getUntranslatedString() == 'Add new @type_singular' && in_array('media', array_values($attr_value->getArguments()))) {
      $attr_value = t('Add new file');
    }

    // Change "Add existing media" button to "Add existing file".
    if ($attr_value->getUntranslatedString() == 'Add existing @type_singular' && in_array('media', array_values($attr_value->getArguments()))) {
      $attr_value = t('Add existing file');
    }

    // Hide "Add media" button from selection of existing files since it is
    // replaced by "Select Entities" button.
    if ($attr_value->getUntranslatedString() == 'Add @type_singular'
      && in_array('media', array_values($attr_value->getArguments()))
      && strpos($variables['attributes']['id'], 'form-actions-ief-reference-save') !== FALSE) {
      $variables['attributes']['class'][] = 'visually-hidden';
    }

    // Change "Create media" button to "Save file" and
    // add blue background color to button.
    if ($attr_value->getUntranslatedString() == 'Create @type_singular' && in_array('media', array_values($attr_value->getArguments()))) {
      $attr_value = t('Save file');
      $variables['attributes']['class'][] = 'button--primary';
    }

    // Change "Add another item" by "Add another agency or department".
    // Note that in_array() must use strict match to avoid inadvertent matches
    // with values of 0 that may appear in #parents.
    if ($attr_value->getUntranslatedString() == 'Add another item' && in_array('field_contributing_agency', $variables['element']['#parents'], TRUE)) {
      $attr_value = t('Add another agency or department');
    }

    // Change "Add another item" by "Add another geographic place".
    if ($attr_value->getUntranslatedString() == 'Add another item' && in_array('field_geographic_place', $variables['element']['#parents'], TRUE)) {
      $attr_value = t('Add another geographic place');
    }
  }
}

/**
 * Implements MODULE_preprocess_HOOK().
 *
 * @param array $variables
 *   Hook variables.
 */
function mass_docs_preprocess_fieldset(array &$variables) {
  /** @var \Drupal\Core\StringTranslation\TranslatableMarkup $legend_title */
  $legend_title = &$variables['legend']['title']['#markup'];
  if ($legend_title instanceof TranslatableMarkup) {
    // Change "Add existing media" button to "Add existing file".
    if ($legend_title->getUntranslatedString() == 'Add existing @type_singular' && in_array('media', array_values($legend_title->getArguments()))) {
      $legend_title = t('Add existing file');
    }
  }
}

/**
 * Implements hook_inline_entity_form_table_fields_alter().
 */
function mass_docs_inline_entity_form_table_fields_alter(&$fields, $context) {
  if ($context['entity_type'] = 'media') {
    // Remove Media Name from table.
    unset($fields['label']);

    // Add Title to the $fields array.
    $fields['field_title'] = [
      'type' => 'field',
      'label' => t('Title'),
      'weight' => 2,
    ];

    // Apply image style to thumbnail.
    $fields['thumbnail']['display_options']['settings']['image_style'] = 'thumbnail_40_x_40';
  }
}
