{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 *
 * @copyright Copyright (c) 2016 Palantir.net
 */
#}
{%
set searchBanner = {
  'bgWide': search800x400_image_url,
  'bgNarrow': file_url(content.field_image['#items'].entity.uri.value),
  'imageName': content.field_name|field_value,
  'imageAuthor': content.field_caption|field_value,
  'form': {
    'path': '@molecules/search-banner-form.twig',
    'content': {
      'action': '/search',
      'buttonText': 'Search',
      'inputText': {
        'labelText': 'Search',
        'required': false,
        'name': 'q',
        'id': 'GUID138490237',
        'placeholder': 'Search...'
      }
    }
  },
  'title': content.field_title|field_value ? content.field_title|field_value : title,
  'intro': content.field_description|field_value ? content.field_description|field_value : intro,
  'helpfulLinks': {
    'columns': 'true',
    'compHeading': {
      'title': content.field_link['#title'],
      'sub': 'true',
      'color': 'yellow',
      'centered': 'true'
    },
    'items': items
  }
}
%}
{% include '@organisms/by-author/search-banner.twig' %}
