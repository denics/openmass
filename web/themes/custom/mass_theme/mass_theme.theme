<?php

/**
 * @file
 * Functions to support theming in the mass.gov theme.
 */

use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess_block().
 */
function mass_theme_preprocess_block(&$variables) {
  // Get base_path into our block.twig templates
  // http://data.agaric.com/how-get-base-path-your-drupal-8-site-twig-template
  $variables['base_path'] = base_path();
}

/**
 * Implements hook_preprocess_HOOK()
 *
 * Various global preprocessing.
 */
function mass_theme_preprocess_html(&$variables) {
  // Add a body class for Action nodes.
  if ($variables['node_type'] == 'action') {
    $variables['attributes']['class'][] = 'action-page';
  }
 }

/**
 * Implements HOOK_preprocess_field().
 */
function mass_theme_preprocess_field(&$variables, $hook) {
  $element = $variables['element'];

  // Get the subheads for the action jump menu.
  if($element['#field_name'] == 'field_action_details') {
  $delta = 0;
  while (!empty($element[$delta])) {
    $paragraph = $element[$delta]['#paragraph'];
    if ($paragraph->getType() == 'subhead') {
      $title = $paragraph->field_title->value;
      $key = strtolower($title);
      $key = Html::cleanCssIdentifier($key);
      $variables['subheads'][$key] = $title;
    }
    $delta++;
  }

  }

}

/**
 * Implements hook_preprocess_HOOK()
 *
 * Break out url pieces for callout link paragraphs.
 */
function mass_theme_preprocess_paragraph__callout_link(&$variables) {
  $url = $variables['paragraph']->get('field_link')->first()->getUrl();

  $variables['calloutLink']['text'] = $variables['paragraph']->get('field_link')->first()->getValue()['title'];
  $variables['calloutLink']['href'] = $url->toString();
  $variables['calloutLink']['type'] = substr( $url->toString(), 0, 4 ) === "http" ? 'external' : 'internal';
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * Process various fields for contacts.
 */
function mass_theme_preprocess_paragraph__contact(&$variables) {
  if ($variables['paragraph']->get('field_phone')->first()) {
    $phone = $variables['paragraph']->get('field_phone')->first()->getValue()['value'];
    $variables['phone_clean'] = preg_replace('/[^0-9]+/', '', $phone);
  }
  $phone = $variables['paragraph']->get('field_phone')->first()->getValue()['value'];
  if ($variables['paragraph']->get('field_fax')->first()) {
    $fax = $variables['paragraph']->get('field_fax')->first()->getValue()['value'];
    $variables['fax_clean'] = preg_replace('/[^0-9]+/', '', $fax);
  }
}
