<?php

/**
 * @file
 * Contains mass_utility.module.
 *
 * Copyright 2017 Palantir.net, Inc.
 */

use Drupal\Core\Cache\Cache;
use Drupal\Core\Form\FormStateInterface;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function mass_utility_form_views_form_subtopics_subtopic_reorder_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Add custom submit handler to invalidate cache tags for
  // "node/%nid%/reorder-callout-cards".
  // With hook_form_BASE_FORM_ID_alter() this code has to be used for doing so.
  // For a similar code example (observe at the end of function):
  // @see https://api.drupal.org/api/drupal/core!modules!menu_ui!menu_ui.module/function/menu_ui_form_node_form_alter/8.0.x
  foreach (array_keys($form['actions']) as $action) {
    if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
      $form['actions'][$action]['#submit'][] = 'mass_utility_invalidate_tags_submit';
    }
  }
}

/**
 * Form submission handler to invalidate cache tags.
 */
function mass_utility_invalidate_tags_submit($form, FormStateInterface $form_state) {
  // When saving order of callout links the the cache tags for the node are
  // invalidated to allow the user see the changes without having to clear
  // the cache.
  $form_id_parts = explode('_', $form_state->getValue('form_id'));
  $nid = end($form_id_parts);
  if (ctype_digit($nid)) {
    Cache::invalidateTags(['node:' . $nid]);
  }
}

/**
 * Implements hook_views_query_alter().
 */
function mass_utility_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  // Assures that the featured content listed in front-end belongs to
  // node (Subtopic) being viewed.
  if ($view->id() == 'subtopics_all_actions' && $view->current_display == 'attachment_1') {
    $query->addWhereExpression(2, "field_featured_content_node_field_data.nid = node__field_action_parent.field_action_parent_target_id");
  }

  // Assures the node listed in Action Guides is not a featured node of the
  // node being viewed.
  if ($view->id() == 'subtopics_all_actions' && $view->current_display == 'block_1') {
    $query->addWhereExpression(1, "(node__field_featured_content.field_featured_content_target_id IS NULL) OR (field_featured_content_node_field_data.nid <> node__field_action_parent.field_action_parent_target_id)");
  }
}

/**
 * Implements hook_views_post_execute().
 */
function mass_utility_views_post_execute(ViewExecutable $view) {
  // If a node is a featured one, then should not be listed in Action Guides
  // of the same node.
  if ($view->id() == 'subtopics_all_actions' && $view->current_display == 'block_1') {
    if (!current($view->attachment_before)['#view']->executed) {
      // Get the featured nodes.
      current($view->attachment_before)['#view']->execute();
    }
    $featured_content = current($view->attachment_before)['#view']->result;
    $featured_nids = [];
    foreach ($featured_content as $row) {
      $featured_nids[] = $row->nid;
    }

    // Show only nodes that are not Featured and reindex values.
    $view->result = array_values(array_filter($view->result, function ($item) use ($featured_nids) {
      return !in_array($item->nid, $featured_nids) != 0;
    }));
  }
}
